master, development
diff --git a/.gitignore b/.gitignore
index a98027b..a7c0c91 100644
--- a/.gitignore
+++ b/.gitignore
@@ -93,3 +93,6 @@ yarn-debug.log*
 .generators
 .rakeTasks
 
+# Ignore CS169 Listen Log
+/.log_cs169
+
diff --git a/Gemfile b/Gemfile
index 113c7da..2a3eab8 100644
--- a/Gemfile
+++ b/Gemfile
@@ -19,6 +19,9 @@ gem 'bootstrap_form'
 gem 'paperclip', '~> 5.0.0'
 gem 'aws-sdk', '~> 2.3.0'
 
+# Code Snippet Added by Course Staff for Logging
+gem 'listen', '~> 3.0'
+
 group :development do
   # Access an IRB console on exception pages or by using <%= console %> in views
   gem 'web-console', '~> 2.0'
diff --git a/Gemfile.lock b/Gemfile.lock
index 57c4be5..b9747df 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -38,7 +38,7 @@ GEM
     addressable (2.7.0)
       public_suffix (>= 2.0.2, < 5.0)
     arel (6.0.4)
-    autoprefixer-rails (9.7.1)
+    autoprefixer-rails (9.7.3)
       execjs
     aws-sdk (2.3.22)
       aws-sdk-resources (= 2.3.22)
@@ -91,7 +91,7 @@ GEM
       cucumber-tag_expressions (~> 1.1.0)
       gherkin (~> 5.0)
     cucumber-expressions (6.0.1)
-    cucumber-rails (1.8.0)
+    cucumber-rails (2.0.0)
       capybara (>= 2.12, < 4)
       cucumber (>= 3.0.2, < 4)
       mime-types (>= 2.0, < 4)
@@ -112,16 +112,16 @@ GEM
     factory_bot_rails (4.11.1)
       factory_bot (~> 4.11.1)
       railties (>= 3.0.0)
-    faraday (0.17.0)
+    faraday (0.17.1)
       multipart-post (>= 1.2, < 3)
-    ffi (1.11.1)
+    ffi (1.11.3)
     figaro (1.1.1)
       thor (~> 0.14)
     formatador (0.2.5)
     gherkin (5.1.0)
     globalid (0.4.2)
       activesupport (>= 4.2.0)
-    guard (2.16.0)
+    guard (2.16.1)
       formatador (>= 0.2.4)
       listen (>= 2.7, < 4.0)
       lumberjack (>= 1.0.12, < 2.0)
@@ -161,7 +161,7 @@ GEM
     listen (3.2.0)
       rb-fsevent (~> 0.10, >= 0.10.3)
       rb-inotify (~> 0.9, >= 0.9.10)
-    loofah (2.3.1)
+    loofah (2.4.0)
       crass (~> 1.0.2)
       nokogiri (>= 1.5.9)
     lumberjack (1.0.13)
@@ -217,7 +217,7 @@ GEM
       coderay (~> 1.1.0)
       method_source (~> 0.9.0)
     public_suffix (4.0.1)
-    puma (4.2.1)
+    puma (4.3.0)
       nio4r (~> 2.0)
     rack (1.6.11)
     rack-test (0.6.3)
@@ -251,7 +251,7 @@ GEM
       activesupport (= 4.2.9)
       rake (>= 0.8.7)
       thor (>= 0.18.1, < 2.0)
-    rake (13.0.0)
+    rake (13.0.1)
     rb-fsevent (0.10.3)
     rb-inotify (0.10.0)
       ffi (~> 1.0)
@@ -352,6 +352,7 @@ DEPENDENCIES
   jquery-rails
   json
   launchy
+  listen (~> 3.0)
   omniauth-github
   paperclip (~> 5.0.0)
   pg (< 1.0.0)
@@ -374,4 +375,4 @@ RUBY VERSION
    ruby 2.4.5p335
 
 BUNDLED WITH
-   1.17.1
+   1.17.3
diff --git a/INSTALL.md b/INSTALL.md
new file mode 100644
index 0000000..62fffe1
--- /dev/null
+++ b/INSTALL.md
@@ -0,0 +1,64 @@
+# Setup For Localhost Development
+
+## 1. Generate new config files 
+The following command makes it easy to get started with the configurations required to run the application.
+Run this command in the directory containing the project to generate configs with reasonable defaults:
+
+`rails g config`
+
+This generates the following files:
+```markdown
+Dockerfile
+docker-compose.yml
+.esaas-engagements-config.json
+config/application.yml
+```
+The above files are `.gitignore`d to avoid checking in secret credentials.
+
+To view the list of available options for the config generator run the following command:
+`rails g config --help`
+
+## 1b. (Optional) Edit the config cache and re-run config generator
+You can now edit the `.esaas-engagements-config.json` with custom values eg. setup a SendGrid API key after setting one up from their website.
+After customizing the `.esaas-engagements-config.json` you can re-run `rails g config` to regenerate the config files with these new values.
+`.esaas-engagements-config.json` files stores your config values and uses them to regenerate `config/application.yml` and your docker files.
+
+## 2. Start application
+You can now start the application locally either on "bare-metal" or inside `docker`.
+
+###  2a. "Bare metal" Approach
+For this approach your laptop need to have dependencies such as `nodejs` and `phantomjs` (for testing) installed either using Homebrew(MacOS), Chocoletey(PC) or your Linux package manager.
+
+`rails s`
+
+### 2b. Docker Approach
+For this approach you do not need to have dependencies on your host machine installed manually.
+
+Build the docker image:
+
+`docker-compose build`
+
+Run migrations:
+
+`docker-compose run rails-server rake db:migrate`
+
+Seed the database:
+
+`docker-compose run rails-server rake db:seed`
+
+Since there is volume mapping, you only need to run migrations and the seed once, not unless there is a new migration or changes to `seed.rb`.
+
+Spawn the docker network:
+
+`docker-compose up -d`
+
+The `docker` machine that is spawned has volume mapping so changes in code should be reflect immediately.
+However, changes to the `Gemfile*` files will require re-building the docker image with `docker-compose build`.
+
+Stop the docker network:
+
+`docker-compose down`
+
+To run tests in your docker machine:
+
+`docker-compose run -e "RAILS_ENV=test" rails-server rake test`
diff --git a/README.md b/README.md
index 27ff6e4..cd982c9 100644
--- a/README.md
+++ b/README.md
@@ -214,6 +214,25 @@ webdriver by:
 bundle exec cucumber --tags ~@javascript
 ```
 
+# FA17 Engagement: Main Features
+
+* New `App`, `Org`, and `User` can be created all at once, with proper association
+* Every user can "post" comments on an `App`, `Org`, and `User`
+  + `App` has different types of comments
+  + Any class that inherits `Commentable` can have many comments
+* More comprehensive customer feedback through a feedback form with ratings/comments
+* Aggregates customer feedbacks from all iterations of an engagement, and display
+averages on each category
+* `User` supports different types (e.g. Student, Staff/Coach, Customer)
+* Exports `Engagement` information as a CSV file
+* each `User` contains a profile image
+  + we are using Amazon S3 to store images on production environment, because
+  Heroku has [ephemeral filesystem](https://devcenter.heroku.com/articles/dynos#ephemeral-filesystem). If you want to run this app on heroku server, you will
+  have to create another Amazon S3 account and setup the configuration([Instruction](https://devcenter.heroku.com/articles/paperclip-s3)).
+* Authorization to edit/destroy only to "Coach"
+* Autocomplete dropdown list (select2)
+* Major Bootstrap styling
+
 # SP19 Engagement: Main Features
 
 * 9 vetting statuses added to support vetting phase. `pending` should be obsolete
@@ -234,24 +253,22 @@ bundle exec cucumber --tags ~@javascript
   + Show `app` status in the app's show page
 
 
-# FA17 Engagement: Main Features
-
-* New `App`, `Org`, and `User` can be created all at once, with proper association
-* Every user can "post" comments on an `App`, `Org`, and `User`
-  + `App` has different types of comments
-  + Any class that inherits `Commentable` can have many comments
-* More comprehensive customer feedback through a feedback form with ratings/comments
-* Aggregates customer feedbacks from all iterations of an engagement, and display
-averages on each category
-* `User` supports different types (e.g. Student, Staff/Coach, Customer)
-* Exports `Engagement` information as a CSV file
-* each `User` contains a profile image
-  + we are using Amazon S3 to store images on production environment, because
-  Heroku has [ephemeral filesystem](https://devcenter.heroku.com/articles/dynos#ephemeral-filesystem). If you want to run this app on heroku server, you will
-  have to create another Amazon S3 account and setup the configuration([Instruction](https://devcenter.heroku.com/articles/paperclip-s3)).
-* Authorization to edit/destroy only to "Coach"
-* Autocomplete dropdown list (select2)
-* Major Bootstrap styling
+# FA19 Engagements: Main Features
+* Added `My Projects` tab that allows coaches, clients and students who are logged in to see a list of apps registered under their orgs.
+* Added functionality to allow logged in users to `request edits` on their projects.
+* Added `AppEditRequest` model and migration to support the `request edits` feature above.
+* Added 3 `AppEditRequest` statuses: `submitted`, `reviewed` and `resubmitted`.
+    + `submitted` edit requests have not yet been approved or reviewed by the staff
+    + `reviewed` edit requests  have been reviewed and staff has left feedback but not approved them. Client needs to update the reqeust.
+    + `resubmitted` edit requests have been updated and resubmitted by the requester after the coach has left feedback
+* Added functionality to show the status of the edit requests on the `GET /app/:id` route that indicates the status of an edit request only to the owner of the app.
+* Added `App Edit Request` tab to show list of App Edit requests for the coaches to review.
+* Added functionality to review, leave feedback or approve edit request from the coaches' end.
+* Added a rails config generator in `lib/generators/config` to allow developers to more easily setup the application locally.
+* Added `INSTALL.md` with instructions on how to setup the application both locally and on heroku.
+* Updated gem version in `Gemfile` and `Gemfile.lock` to fix security issues with obsolete packages.
+* Changed the `Iteration` feature to allow coaches to request iteration feedback directly from a project page.
+* Added `Login` button on the toolbar for easier access to the login page
 
 # High priority feature list
 
diff --git a/Rakefile b/Rakefile
index dc4a6cf..d5bed7b 100644
--- a/Rakefile
+++ b/Rakefile
@@ -11,6 +11,7 @@ begin
   RSpec::Core::RakeTask.new(:spec)
 
   task :default => :spec
+  task :test => [:spec, :cucumber]
 rescue LoadError
   # no rspec available
 end
diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index 9da302a..06eddff 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -5,7 +5,8 @@ class ApplicationController < ActionController::Base
   # For APIs, you may want to use :null_session instead.
   protect_from_forgery with: :exception
   helper_method :current_user
-
+  helper_method :app_owner
+  
   private
   @@name_path = nil
 
@@ -61,5 +62,8 @@ class ApplicationController < ActionController::Base
     @page_num = [[1,@page_num].max,max_page_num].min
     session["#{name}_page_num"] = @page_num.to_s
   end
-
+  
+  def app_owner(app_id)
+    return current_user.app_ids.include? app_id
+  end
 end
\ No newline at end of file
diff --git a/app/controllers/apps_controller.rb b/app/controllers/apps_controller.rb
index 7726b69..05bdf90 100644
--- a/app/controllers/apps_controller.rb
+++ b/app/controllers/apps_controller.rb
@@ -23,11 +23,11 @@ class AppsController < ApplicationController
   # GET /apps/1.json
   def show
     @app_edit_request = ApplicationHelper.get_edit_request_for session[:user_id], params[:id]
-    @current_engagement = App.find(params[:id]).engagements.order("created_at").first
-    if @current_engagement.nil?
-      @iterations = nil
-    else
+    @current_engagement = @engagements.order("created_at").first
+    if @current_engagement.present?
       @iterations = @current_engagement.iterations
+    else
+      @iterations = nil
     end
   end
 
diff --git a/app/controllers/iterations_controller.rb b/app/controllers/iterations_controller.rb
index 5cc2bc9..a317f83 100644
--- a/app/controllers/iterations_controller.rb
+++ b/app/controllers/iterations_controller.rb
@@ -94,4 +94,9 @@ class IterationsController < ApplicationController
       :communication_text, :understanding, :understanding_text,
       :effectiveness, :effectiveness_text, :satisfied, :satisfied_text)
   end
+
+  def auth_user?
+    return current_user.coach? || current_user.client?
+  end
+  
 end
diff --git a/app/helpers/application_helper.rb b/app/helpers/application_helper.rb
index 1cee577..6d4e195 100644
--- a/app/helpers/application_helper.rb
+++ b/app/helpers/application_helper.rb
@@ -21,7 +21,7 @@ module ApplicationHelper
   def self.get_edit_req_banner_message(app_edit_request)
     banner_message_by_status = {
         submitted:   'Your app edit request has been submitted to staff for review and approval. Staff has not yet reviewed/approved this request.',
-        reviewed:    'Staff has reviewed and left feedback on you edit request. Kindly review staff feedback and update the request.',
+        reviewed:    'Staff has reviewed and left feedback on your edit request. Kindly review staff feedback and update the request.',
         resubmitted: 'You resubmitted an edit request after staff left feedback but staff has not yet reviewed your updates.'
     }
     banner_message_by_status[app_edit_request&.status&.to_sym] || 'There are currently no edit requests for your app. You can request new edits for you app here.'
diff --git a/app/views/apps/show.html.haml b/app/views/apps/show.html.haml
index 3b0ea62..90973ac 100644
--- a/app/views/apps/show.html.haml
+++ b/app/views/apps/show.html.haml
@@ -1,14 +1,13 @@
 - unless @app_edit_request.nil?
   .alert.text-center{class: "alert#{ApplicationHelper.get_edit_req_banner_class(@app_edit_request)}", style: 'margin: 10px 0;' }
     = ApplicationHelper.get_edit_req_banner_message(@app_edit_request)
-- unless @iterations.nil?
+- if app_owner(@app.id)
   - @iterations.each do |iter|
     - if iter.customer_feedback.nil? || iter.general_feedback.nil?
       .alert.alert-info.text-center{style: 'margin: 10px 0;'}
         %h5
           A staff has requested feedback for Iteration #{iter.number}.
           = link_to "Complete Feedback Form", edit_engagement_iteration_path(@current_engagement.id, iter.id), :class => 'btn btn-primary pull-right'
-
 .page-header
   %h1
     = link_to_unless @app.deployment_url.blank?, @app.name, @app.deployment_url, :target => '_blank'
diff --git a/app/views/my_approval_requests/index.html.haml b/app/views/my_approval_requests/index.html.haml
index 77da61f..cddc93d 100644
--- a/app/views/my_approval_requests/index.html.haml
+++ b/app/views/my_approval_requests/index.html.haml
@@ -34,7 +34,7 @@
             %td
               = link_to req.requester.name, req.requester
             %td
-              = req.created_at.strftime(ApplicationHelper.get_date_format)
+              = req.created_at.strftime("%B %d, %Y  %r")
             %td
               %span.label{class: "label#{ApplicationHelper.get_edit_req_banner_class(@app_edit_request)}"}
                 = req.status
diff --git a/config/initializers/logger.rb b/config/initializers/logger.rb
new file mode 100644
index 0000000..81c6cdf
--- /dev/null
+++ b/config/initializers/logger.rb
@@ -0,0 +1,42 @@
+def create_log
+    diff = `git diff`
+    diff_stat = `git diff --numstat`
+    timestamp = Time.now.getutc.to_i
+    commit_hash = `git rev-parse HEAD`.strip
+    branch = `git rev-parse --abbrev-ref HEAD`.strip
+    if diff == ""
+        diff = `git diff HEAD~1`
+        diff_stat = `git diff HEAD~1 --numstat`
+        commit_hash = `git rev-parse HEAD~1`.strip
+    end
+    log_file_name = "#{timestamp}_#{commit_hash}"
+    f = File.new(".log_cs169/#{log_file_name}.txt", "w")
+    f.write("#{branch}, #{Rails.env}\n")
+    f.write(diff)
+    f.write("\n--\n")
+    f.write(diff_stat)
+    f.close
+end
+# Check that logs directory is set up and if not, make a blank one
+def check_dir
+    if not Dir.exists?('.log_cs169')
+        puts "got here"
+        Dir.mkdir '.log_cs169'
+    end
+end
+
+if Rails.env == "development"
+    check_dir
+    listener = Listen.to('', ignore: /\.log_cs169/) do |modified, added, removed|
+        if modified != [] or added != [] or removed != []
+           create_log 
+        end
+    end
+    listener.ignore /db\/development/
+    listener.ignore /db\/test/
+    listener.ignore /db\/production/
+    listener.start
+elsif Rails.env == "test"
+    check_dir
+    create_log
+end
diff --git a/db/seeds.rb b/db/seeds.rb
index 1e9a750..996d6b5 100644
--- a/db/seeds.rb
+++ b/db/seeds.rb
@@ -3,11 +3,11 @@ require 'csv'
 PROD_USERS = [
 		%w(mutex@berkeley.edu Alex bdzr coach),
 		%w(srujayk@gmail.com Srujay srujayk coach),
-		%w(pgenerao516@gmail.com Peter Autholius coach),
+		%w(pgenerao516@gmail.com Peter autholius coach),
 		%w(jwp@berkeley.edu Jeff jw-park coach),
-    %w(aleasabrina@gmail.com Sabrina coach),
-    %w(kingarthuralagao@gmail.com King coach),
-    %w(anthonyshao@gmail.com Anthony coach)
+    %w(aleasabrina@gmail.com Sabrina sabrina1 coach),
+    %w(kingarthuralagao@gmail.com King kialagao coach),
+    %w(anthonyshao@gmail.com Anthony anthony-repo coach)
 ]
 
 if Rails.env == 'production'
diff --git a/features/my_approval_requests.feature b/features/my_approval_requests.feature
new file mode 100644
index 0000000..dd8f914
--- /dev/null
+++ b/features/my_approval_requests.feature
@@ -0,0 +1,60 @@
+Feature: staff should be able to approve or comment on requested feature changes or additions made by a user
+  As a logged in Coach user on ESaaS Engagements
+  I should see a tab labeled “App Edit Requests”
+  So that I can approve of or give feedback on requested feature changes or new features on existing apps made by users
+
+  Background: seed data and log in
+    Given the following apps exist:
+      | id  | name  | description | org_id | status      | pivotal_tracker_url | repository_url | deployment_url  | features |
+      | 101 | app1  | test1       | 1      | pending     | p1.com              | repo-url1.com  | deploy-url1.com | f1       |
+      | 102 | app2  | test2       | 1      | pending     | p2.com              | repo-url2.com  | deploy-url2.com | f2       |
+      | 103 | app3  | test3       | 1      | development | p3.com              | repo-url3.com  | deploy-url3.com | f3       |
+      | 104 | app4  | test4       | 4      | pending     | p3.com              | repo-url3.com  | deploy-url3.com | f3       |
+
+    And the following orgs exist:
+      | id | name | contact_id |
+      | 1  | org1 | 2          |
+      | 2  | org2 | 2          |
+      | 3  | org3 | 1          |
+      | 4  | org4 | 2          |
+
+    And the following App Edit Requests exist:
+      | id | description  | features    | feedback | status      | approval_time | app_id | requester_id    | approver_id | created_at                 | updated_at |
+      | 1  | app1         | test1       |          | submitted   |               | 101    | 2               |             | 2019-11-20 7:44:50 -0800   |            |
+      | 2  | app2         | test2       |          | submitted   |               | 102    | 2               |             | 2019-11-20 08:05:50 -0800  |            |
+
+    And the following users exist:
+      | id | name  | github_uid      | email          | user_type     |
+      | 1  | user1 | esaas_developer | test@user.com  | coach         |
+      | 2  | user2 | mock_user1      | test1@user.com | client        |
+      | 3  | user3 |                 | test2@user.com | student       |
+      | 4  | user4 |                 | test4@user.com | client        |
+
+# ---------------------------- Menu bar ----------------------------------------
+Scenario: A user that is not logged in cannot see 'App Edit Requests' tab
+Given I am not logged in
+Then I should not see "App Edit Requests"
+
+Scenario: A logged in user that is not a Coach cannot see 'App Edit Requests' tab
+#  Given I am logged in
+#  Then I should not see "App Edit Requests"
+
+Scenario: A logged in user that is a Coach can see the 'App Edit Requests' tab
+Given I am logged in
+Then I should see "App Edit Requests"
+
+# ------ Previously: App Edit Requests Index -- Currently: MyApprovalRequests Index -------
+
+Scenario: A logged in coach user can see list of App Edit Requests in 'App Edit Requests' tab
+  Given I am logged in
+  When I follow "App Edit Requests"
+  Then I should see "app1" before "app2"
+  And I should not see "app4"
+  And I should not see "app3"
+
+# -------------------- App Edit Request Show Page -----------------------------
+Scenario: A logged in coach user can view an App Edit (Feature Change) Request through the 'App Edit Requests' index
+  Given I am logged in
+  When I follow "App Edit Requests"
+  When I follow the App Edit Request with id 102
+  Then I should see /Edit request for "app2"/
diff --git a/features/step_definitions/app_edit_request_steps.rb b/features/step_definitions/app_edit_request_steps.rb
new file mode 100644
index 0000000..4bf1a42
--- /dev/null
+++ b/features/step_definitions/app_edit_request_steps.rb
@@ -0,0 +1,10 @@
+Given(/^the following App Edit Requests exist:$/) do |table|
+  # table is a Cucumber::MultilineArgument::DataTable
+  table.hashes.each do |app_edit_request|
+  	AppEditRequest.create(app_edit_request)
+  end
+end
+
+When /^(?:|I )follow the App Edit Request with id (.+)$/ do |id|
+  visit show_my_approval_request_path(app_id: id)
+end
diff --git a/features/step_definitions/pagination_steps.rb b/features/step_definitions/pagination_steps.rb
index beaf8e6..df2f0a5 100644
--- a/features/step_definitions/pagination_steps.rb
+++ b/features/step_definitions/pagination_steps.rb
@@ -147,3 +147,9 @@ Then /^I should see (\d+) (.+) starting with (?:.+) (\d+) with sequence format:$
     current_item.keys.each { |k| appears_before(table_element, current_item[k], next_item[k])}
   end
 end
+
+Then /I should see "(.*)" before "(.*)"/ do |e1, e2|
+  #  ensure that that e1 occurs before e2.
+  #  page.body is the entire content of the page as a string.
+  page.body.index(e1).should be < page.body.index(e2)
+end
diff --git a/lib/generators/config/templates/Dockerfile.template b/lib/generators/config/templates/Dockerfile.template
index feaca5f..8d4b6df 100644
--- a/lib/generators/config/templates/Dockerfile.template
+++ b/lib/generators/config/templates/Dockerfile.template
@@ -1,11 +1,12 @@
 # Keep Ruby version in Dockerfile in sync with Ruby version in Gemfile
 FROM ruby:<%= options[:ruby_version] %>
-RUN apt-get update -qq && apt-get install -y nodejs postgresql-client
+RUN apt-get update -qq && apt-get install -y postgresql-client
+RUN apt-get install -y libxml2-dev libxslt1-dev # for nokogiri
+RUN apt-get install -y sqlite3 libsqlite3-dev
+RUN curl -sL https://deb.nodesource.com/setup_12.x | bash - \
+    && apt-get install -y nodejs
+RUN npm i -g phantomjs-prebuilt --unsafe-perm # for capybara
 RUN mkdir /app
 WORKDIR /app
-COPY . /app
+ADD Gemfile* /app/
 RUN bundle install
-RUN rake db:seed
-RUN rake db:migrate
-EXPOSE 3000
-CMD ["rails", "server", "-b", "0.0.0.0"]
diff --git a/lib/generators/config/templates/docker-compose.yml.template b/lib/generators/config/templates/docker-compose.yml.template
index 4718b9d..86f7100 100644
--- a/lib/generators/config/templates/docker-compose.yml.template
+++ b/lib/generators/config/templates/docker-compose.yml.template
@@ -8,6 +8,7 @@ services:
     build:
       context: .
       dockerfile: Dockerfile
+    command: bin/rails server --port 3000 --binding 0.0.0.0
     ports:
       - 3000:3000
     volumes: # map volume for live reload
@@ -20,7 +21,7 @@ services:
       - github_key=<%= options[:prod_github_key] %>
       - github_secret=<%= options[:prod_github_secret] %>
       <%- end -%>
-    depends_on:
+    links:
     <%- if options[:pg_host] == 'postgres-server' -%>
       - postgres-server
     <%- end -%>
@@ -48,7 +49,7 @@ services:
     image: postgres:latest
     <%- if options[:pg_vmap] -%>
     volumes:
-      - ./tmp/db:/var/lib/postgresql/data
+      - ./tmp/postgres-server:/var/lib/postgresql/data
     <%- end -%>
     environment:
       - POSTGRES_PASSWORD=<%= options[:pg_pass] %>

--
3	0	.gitignore
3	0	Gemfile
10	9	Gemfile.lock
64	0	INSTALL.md
35	18	README.md
1	0	Rakefile
6	2	app/controllers/application_controller.rb
4	4	app/controllers/apps_controller.rb
5	0	app/controllers/iterations_controller.rb
1	1	app/helpers/application_helper.rb
1	2	app/views/apps/show.html.haml
1	1	app/views/my_approval_requests/index.html.haml
42	0	config/initializers/logger.rb
4	4	db/seeds.rb
60	0	features/my_approval_requests.feature
10	0	features/step_definitions/app_edit_request_steps.rb
6	0	features/step_definitions/pagination_steps.rb
7	6	lib/generators/config/templates/Dockerfile.template
3	2	lib/generators/config/templates/docker-compose.yml.template
